[ClassVersion("1.0.0.0"), FriendlyName("SqlEndpoint")]
class DSC_SqlEndpoint : OMI_BaseResource
{
    [Key, Description("The name of the endpoint.")] String EndpointName;
    [Key, Description("The name of the _SQL Server_ instance to be configured.")] String InstanceName;
    [Required, Description("Specifies the type of endpoint. Currently the only types that are supported are the _Database Mirroring_ and the _Service Broker_ type."), ValueMap{"DatabaseMirroring","ServiceBroker"}, Values{"DatabaseMirroring","ServiceBroker"}] String EndpointType;
    [Write, Description("If the endpoint should be present or absent. Default values is `'Present'`."), ValueMap{"Present","Absent"}, Values{"Present","Absent"}] String Ensure;
    [Write, Description("The network port the endpoint is listening on. Default value is `5022`, but default value is only used during endpoint creation, it is not enforce.")] Uint16 Port;
    [Write, Description("The host name of the SQL Server to be configured. Default value is the current computer name.")] String ServerName;
    [Write, Description("The network IP address the endpoint is listening on. Default value is `'0.0.0.0'` which means listen on any valid IP address. The default value is only used during endpoint creation, it is not enforce.")] String IpAddress;
    [Write, Description("The owner of the endpoint. Default is the login used for the creation.")] String Owner;
    [Write, Description("Specifies whether messages received by this endpoint that are for services located elsewhere will be forwarded.")] Boolean IsMessageForwardingEnabled;
    [Write, Description("Specifies the maximum amount of storage in megabytes to allocate for the endpoint to use when storing messages that are to be forwarded.")] UInt32 MessageForwardingSize;
    [Write, Description("Specifies the state of the endpoint. When an endpoint is created and the state is not specified then the endpoint will be started after it is created. The state will not be enforced unless the parameter is specified."), ValueMap{"Started","Stopped","Disabled"}, Values{"Started","Stopped","Disabled"}] String State;
};
